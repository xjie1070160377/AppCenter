<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
		
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />

      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="5" />
      <property name="minIdle" value="5" /> 
      <property name="maxActive" value="300" />

      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />

      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />

      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />

      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${hibernate.dialect}" />		
				<property name="showSql" value="true" />		
			</bean>
		</property>
		<property name="packagesToScan">
			<list>
				<value>cn.mooc.app.core.data</value>
				<value>cn.mooc.app.module.**.data</value>
				<value>cn.mooc.app.plugin.**.data</value>
			</list>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>				
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>

				<!-- <prop key="hibernate.jdbc.fetch_size">50</prop> -->
				<!-- <prop key="hibernate.connection.useUnicode">true</prop> -->
				<!-- <prop key="hibernate.connection.characterEncoding">UTF-</prop> -->
				<!-- 定义是否自动生成表，create表示每次加载都重新生成，update表示每次加载只是更新表 -->
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->				
			</props>
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

    <!-- 事务装配 Start (为了让插件在异步消息中支持事务)-->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>  
    </tx:advice>
    <aop:config>  
        <!-- <aop:pointcut expression="execution(* cn.mooc.app.core.plugin.*.*(..))" id="txPointcut"/> -->
        <aop:pointcut expression="execution(* cn.mooc.app.core.plugin.PluginDataService.*(..))" id="txPointcutTask"/>
        <!-- <aop:pointcut expression="execution(* cn.mooc.app.plugin.**.service..*.*(..))" id="txPointcutPlugin"/> -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcutTask"/>
        <!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcutPlugin"/> -->
    </aop:config>
<!--     <aop:aspectj-autoproxy /> -->
    <!-- 事务装配 End--> 
    
	<!-- 启用 annotation事务--> 
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <jpa:repositories base-package="cn.mooc.app.core.data.rds, cn.mooc.app.module.**.data.rds, cn.mooc.app.plugin.**.data.rds" entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="transactionManager" />
    
	
</beans>